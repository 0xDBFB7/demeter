
=head1 NAME

Demeter installation instructions

=head1 VERSION

This documentation refers to Demeter version 0.9.

=head1 OVERVIEW

=head2 Installing source code

The instructions for installing the Demeter source code on a Linux
machine are not trivial, but also not difficult. If you follow these
instructions patiently, everything will work. The main issue is the
large number of dependencies. The instructions on this page should
work on any flavor of linux, any other unix, and probably OSX as
well. Everything here except for installing Ifeffit and PGPLOT will
work on a Windows machine with Strawberry perl.

These instructions are for installing system-wide, which requires root
privileges.  All instructions are given assuming that you use a system
which uses C<sudo> (L<http://en.wikipedia.org/wiki/Sudo>).  If your
machine does not use C<sudo>, then replace C<sudo> with C<su -s> in
the instructions that follow.

In a section below (see L<"Installing Demeter without root privileges">)
instructions are given for installation without root privileges.  All
the instructions are the same, once you do an additional preparatory
step.

Demeter is written in perl. B<You must install perl on your
computer>. On Ubuntu, the package name is simply "perl". (My computers
are all Ubuntu, hence all of my hints about packages that need
installing refer to the Ubuntu package names.  Package names on other
systems are likley to be similar.)  You must use at least perl 5.10.
Some "enterprise" versions of Linux (notably Red Hat based ones like
RHEL, CentOS, and Scientific Linux) ship with an ancient version of
perl.  Demeter will not run under perl 5.6 or 5.8.  You B<will> have
to upgrade perl before using Demeter.

Demeter benefits B<tremendously> by having Gnuplot
(L<http://gnuplot.info>) installed. All Linux distributions should
have a package for Gnuplot. On Ubuntu, the package is called
"gnuplot".  Or you can grab the latest source code from Gnuplot's
SourceForge site
(L<http://sourceforge.net/projects/gnuplot/files/gnuplot/>) and
install it from scratch.

=head2 Installing from packages

Many people will want to simply install ready-to-use packages.

=over 4

=item B<WINDOWS>

Most people installing Demeter on a Windows machine will want to
use the installer package.  The latest version can be found at
L<https://github.com/bruceravel/demeter/downloads>.

=item B<Debian, Ubuntu, and debian-based linux>

(Information will be forthcoming)

=item B<Macintosh OSX>

(Information will be forthcoming)

=back

=head1 BUILD DEMETER AND ITS DEPENDENCIES

=head2 Step 1: Install Ifeffit and PGPLOT

You will need the C<gcc> and C<gfortran> compilers as well as a few
development libraries installed on your computer

=over 4

=item *

Download the Ifeffit source code from the Ifeffit Downloads page
(L<http://cars9.uchicago.edu/ifeffit/Downloads>)

=item *

Unpack that tarball and cd into the newly created directory

=item *

Run the F<PGPLOT_install> script. This streamlines the rather unwieldy
chore of building PGPLOT. This step will require root access to the
computer.

   sudo ./PGPLOT_install

=item *

Do C<./configure>

=item *

Do C<make>

=item *

Do C<sudo make install>

=back

On my Ubuntu machine, the following development libraries are needed
to get Ifeffit and PGPLOT compiled. On other flavors of linux, these
packages might be called by different names, but hopefully this list
will help you resolve which packages are needed.

=over 4

=item *

C<libx11-dev>

=item *

C<libncurses5>

=item *

C<libpng12>

=item *

C<libgif4>

=back

=head2 Step 2: Download a copy of Demeter

The source code for Demeter is currently managed on github:
L<https://github.com/bruceravel/demeter>.

You will need to have C<git> (L<http://git-scm.com/>), which is a
version control system used to manage the Demeter source code,
installed on your computer. On Ubuntu machines, the package is called
"git-core".

To download a copy of the source code, do one of the following:

=over 4

=item *

Use git to clone a copy.  At the command line, do:

   git clone git://github.com/bruceravel/demeter.git

then follow along with developments by doing

   git pull

to download future modifications to the code.

=item *

Grab the most recent archive file containing the Demeter soruce code,
go to L<https://github.com/bruceravel/demeter/downloads> and click on
one of the download buttons near the top of the page to get either the
F<tar.gz> or F<.zip> archive file containing the entire source code.

=back

Cloning a copy with git is far more convenient as it allows you to
easily more easily as Demeter evolves.

=head2 Step 3: Download and install the dependencies

After checking out a copy of Demeter from git (or unpacking the
archive), cd into the new subdirectory and do

   perl ./Build.PL

If this is the first time you are installing Demeter on this computer,
you will see a very large number of warnings about missing
dependencies. If no warnings are issued, proceed to Step 4.

=head3 Step 3a: Configure cpan (optional)

You will use the C<cpan> (L<https://metacpan.org/module/cpan>) program
to download most of the dependencies from the CPAN repository
(L<http://metacpan.org>). You can make this process easier by
configuring the cpan program. Start cpan:

   sudo cpan

At the C<cpanE<gt>> prompt, issue the following commands:

   o conf build_requires_install_policy yes
   o conf prerequisites_policy follow
   o conf commit

Now, when one of Demeter's dependencies itself has a dependency, this
configuration will tell the cpan program to automatically follow them.

Skipping this step is ok, but it means that you will need to answer
"yes" to a lot of questions in Step 3b.

=head3 Step 3b: Install Demeter's dependencies (not optional!)

Now that cpan is correctly configured, do the following

   sudo ./Build installdeps

Go get a cup of coffee. This takes a while.

Although step 3a configures cpan in such a way that most of the
interaction is handled automatically, a few packages will still ask
you questions. Answering yes to all of these questions is a good idea
as these optional dependencies enable some nice features in
Demeter. (However, if you do not have Gnuplot on you computer, answer
"no" to the question about Graphics::GnuplotIF.  But, really, use
Gnuplot.  Your Demeter experience will be much better.)

In my experience, all dependencies install smoothly on recent linux
installations.  They also all install smoothly under Strawberry Perl
(L<http://strawberryperl.com/>) on Windows.  If there are any
failures, you will need to track down the problems and fix them in
order to proceed.

=head2 Step 4: Build and install Demeter

Almost done! Just do each of the following:

   perl Build.PL
   ./Build
   ./Build test
   sudo ./Build install

You need to redo the C<perl Build.PL> step to verify that all the
dependencies are installed and available. If any failed to install
correctly, you will be told at that stage.

This will put all of Demeter, all the executable programs, and all the
documentation in in the proper place on your computer. You are now
good to go.

The Demeter package now includes components (e.g. L<Xray::Absorption>
and L<STAR::Parser>) that used to be handled separately. Demeter is
now one stop shopping!

If any errors are reported during the C<./Build test> step, you should
report them to Bruce. The best report includes a complete capture of
everything written to the screen. The easiest way to capture screen
text is to use C<tee>
(L<http://www.gnu.org/software/coreutils/manual/coreutils.html#tee-invocation>).
Here is an example:

   ./Build test | tee screen_messages.txt


=head1 SPECIAL CASES

=head2 Installing Demeter without root privileges

In step 1, replace the command

   ./configure

with

   ./configure --prefix=/path/to/installation/location

Here you need to specify a location in your own diskspace in which to
install Ifeffit and all the rest.  I'd recommend something like
C<$HOME/local>.  You will also need to put C<$HOME/local/bin/> in your
execution path, which can be done by adding this to your F<.bashrc> file:

   export PATH=$PATH:$HOME/local/bin/

Even if you are installing Demeter without root, it is probably easier
to get Ifeffit and PGPLOT installed system-wide. On a debian-based
system, even better would be to install Carlo Segre's pre-built
versions of Ifeffit and PGPLOT by following the instructions at
L<http://debian-xray.iit.edu/>.

Prior to Step 3a, go to L<https://metacpan.org/module/local::lib> and
download the latest version of the L<local::lib> module.  Unpack it and
cd into the newly created directory.

Do

   perl Makefile.PL --bootstrap

Then do

   make test && make install

If you use the bash shell, do

   echo 'eval $(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)' >>~/.bashrc

If you use a shell that uses C shell syntax, follow the instructions
at L<https://metacpan.org/module/local::lib#The-bootstrapping-technique>.

This last step adds a line to your login file. The easiest way for
this to take effect is to log out and log in again or to open a new
terminal window.

Once L<local::lib> is installed, follow all the instructions in Steps
3a, 3b, and 4, except that you now do not need to install using
C<sudo> (that is, type the command as given, but without "sudo").  The
whole point of installing L<local::lib> is to be able to install all
of this software in your own diskspace without needing root
privileges.

=head2 Working behind a proxy server

Each of the steps that involves going out onto the big, bad internet
will require special configuration if you are working from behind a
proxy server.

For example, here at Brookhaven National Laboratory, the proxy URL and
port number is http://192.168.1.130:3128. In the examples that follow,
you will need to replace that with the correct proxy configuration for
your institution.

=over 4

=item B<git>

To have C<git> talk through the proxy, I had to do this:

   git config --global https.proxy http://192.168.1.130:3128

=item B<cpan>

First, fire up C<cpan> as root

   sudo cpan

At the C<cpanE<gt>> prompt, issue the following commands:

   o conf http_proxy http://192.168.1.130:3128
   o conf ftp_proxy http://192.168.1.130:3128
   o conf commit

=back

C<cpan> should now work properly through the proxy.

=head2 Installing and using source code on Windows

You can easily follow Demeter's developments or hack on Demeter's
source code on a Windows machine. 

=over 4

=item *

Install the most recent Windows installer package from
L<https://github.com/bruceravel/demeter/downloads>.

=item *

Next install C<git> (L<http://git-scm.com/>) on your computer.

=item *

Proceed with Steps 2 and 4 from the instructions above.  This will
keep you up to date with the latest developments.

=back

=head1 BUGS AND LIMITATIONS

Please report problems to Bruce Ravel (bravel AT bnl DOT gov)

Patches are welcome.


=head1 AUTHOR

Bruce Ravel (bravel AT bnl DOT gov)

http://cars9.uchicago.edu/~ravel/software/

=head1 LICENCE AND COPYRIGHT

Copyright (c) 2008-2012 Bruce Ravel (bravel AT bnl DOT gov). All rights reserved.

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself. See L<perlgpl>.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

=cut

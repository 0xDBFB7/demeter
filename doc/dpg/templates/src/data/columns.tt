[% META title = 'Importing column data files' %]

[% FILTER html_para %]
A common situation for data import involves raw data from a beamline.
In this case, [% demeter %] assumes that your data are in columns,
that one of the columns represents energy, and that two or more of the
remaining columns represent signals on the various detectors.  In this
case, you must explicitly specify which column is which when you
define the Data object.
[% END %]

[% PROCESS section label="Transmission data" %]

[% FILTER html_para %]
This first example is for a file containing transmission XAS data:
[% END %]

[% WRAPPER codeexample -%]
#!/usr/bin/perl
use Demeter;

my $data = Demeter::Data -> new();
$data -> set(file        => "data/fe.060.dat",
             name        => 'Fe 60K',
             energy      => '$1', # column 1 is energy
             numerator   => '$2', # column 2 is I0
             denominator => '$3', # column 3 is It
             ln          => 1,    # these are transmission data
            );
$data -> plot('E');
[% END %]

[% FILTER html_para %]
The details of how to turn the columns into [% mu %] data are given at
lines 12 to 15.  The energy column is identified as the first column
in the data file.  The manner in which the columns are identified,
i.e. the use of the dollar sign ([% INCLUDE font/mono a='$' %]) is
borrowed from the Gnuplot plotting program.  This introduced a
potential stumbling block in a perl script.  The
[% INCLUDE font/mono a='$' %] symbol is, of course, the sigil denoting
a scalar in perl and things like 
[% INCLUDE font/mono a='$1' %] and [% INCLUDE font/mono a='$2' %]
are the text capturing special variables (see
[% INCLUDE html/link text="the perlvar document"
                     link="http://perldoc.perl.org/perlvar.html" %]
for details).  It is therefore necessary to single-quote the column
specifiers to avoid having the [% INCLUDE font/mono a='$' %] symbols
iterpolated, as they would be with double quotes.  Another useful
syntax for column speficiation would be to use the non-interpolating
quote operator, like so:
[% END %]

[% WRAPPER codeexample -%]
#!/usr/bin/perl
use Demeter;

my $data = Demeter::Data -> new();
$data -> set(file        => "data/fe.060.dat",
             name        => 'Fe 60K',
             energy      => q{$1}, # column 1 is energy
             numerator   => q{$2}, # column 2 is I0
             denominator => q{$3}, # column 3 is It
             ln          => 1,     # these are transmission data
            );
[% END %]

[% FILTER html_para %]
Once the file is imported and the column information is given, the
Data object can be used for other things, such as plotting or using in
a fit.  Using the Data object in various ways will be discussed in
later sections of the document.

That these are transmission data is indicated by the value of the
[% INCLUDE font/mono a='ln' %] attribute.  Set to 1, the columns will
be processed as tranmission data, i.e. 
[% mu %]=ln([% i0 %]/[% it %]) .  Set to 0 (or unspecified as
zero is the default), the columns will be processed as fluorescence
data, i.e. [% mu %]=[% if %]/[% i0 %].

In this example, the [% i0 %] detector is in column 2 of the data file
and the [% it %] detector is in column 3.
[% END %]

[% PROCESS section label="Fluorescence data" %]

[% FILTER html_para %]
The next example is for a file containing fluorescence XAS data:
[% END %]

[% WRAPPER codeexample -%]
#!/usr/bin/perl
use Demeter;

my $data = Demeter::Data -> new();
$data -> set(file        => 'soil.dat',
             name        => 'dilute soil sample',
             energy      => '$1',  # column 1 is energy
             numerator   => '$4',  # column 4 is If
             denominator => '$2',  # column 2 is I0
             ln          => 0,     # these are fluorescence data
            );
[% END %]

[% FILTER html_para %]
Here the [% INCLUDE font/mono a='ln' %] attribute is set to 0 to
indicate that these are fluorescence data.  The 
[% INCLUDE font/mono a='numerator' %] attribute is set to the column
containing the fluorescence detector and the 
[% INCLUDE font/mono a='denominator' %] attribute is set to the
[% i0 %] column.  Again, once the file is imported and the columns are
set, the Data object is ready for use.
[% END %]

[% PROCESS section label="Multi-element detector fluorescence data" %]

[% FILTER html_para %]
When fluorescence data is measured using a multi-element detector
(MED), you will want to sum up the detector channels
before dividing by [% i0 %].  This is accomplished by adding
multiple channels in the [% INCLUDE font/mono a='numerator' %]
attribute: 
[% END %]

[% WRAPPER codeexample -%]
#!/usr/bin/perl
use Demeter;

my $data = Demeter::Data -> new();
$data -> set(file        => 'soil.dat',
             name        => 'dilute soil sample',
             energy      => '$1',
             numerator   => '$4+$5+$6+$7',  # four fluo channels
             denominator => '$2',
             ln          => 0,
            );
[% END %]

[% FILTER html_para %]
This will add up the contents of columns 4 through 7 then divide by
column 2.

You may also wish to import each channel of the MED into individual
Data groups so each channel they may be examined, processed, and
plotted individually.  An efficient way of doing so is explained in
[% INCLUDE html/link text="the section on multichannel data"
                     link="mc.html" %].
[% END %]

[% PROCESS section label="Preprocessing column data on the fly" %]

[% FILTER html_para %]
You may have some reason to do a bit of additional processing of the
columns in the data file.  As an example, the
[% INCLUDE html/link text="data handling section of the Ifeffit FAQ"
                     link="http://cars9.uchicago.edu/iffwiki/FAQ/Data_Handling" %]
explains how to import data from the Ferrel Lytle database which were
recorded as a function of motor position for the monochromator angle.
For data like thse, it is necessary to convert motor position to
energy using some knowledge of the monochromator crystal and motor and
a few fundamental constants.  This can be implemented in [% demeter %]
like so:
[% END %]

[% WRAPPER codeexample -%]
#!/usr/bin/perl
use Demeter;

## d-spacing = 1.92017    steps/deg = 4000    hc = 12398.61    rads->degs = 57.29577951
my $data = Demeter::Data -> new();
$data -> set(file        => "lytle.dat",
             name        => 'Fe 60K',
             energy      => '12398.61 / (2*1.92017) / sin($1/(57.29577951*4000))',
             numerator   => '$2',
             denominator => '$3',
             ln          => 1,
            );
$data -> plot('E');
[% END %]

[% FILTER html_para %]
As another example, you might wish to do a simple deadtime correction
for MED data based on the measured input and output count-rates of the
detectors.  This information is often recorded as columns in the data
file so that this deadtime correction can be applied as needed.  The
basic concept of the deadtime correction is that the ratio of the
input and output count-rates for the entire energy range of the
detector is an accurate measure of the lost count rate in any region
of interest (ROI) of the detector.  Thus the counts in the ROI can be
corrected by multiplying by the measured input/output ratio.  This can
be implemented for a single channel like so:
[% END %]

[% WRAPPER codeexample -%]
#!/usr/bin/perl
use Demeter;

my $data = Demeter::Data -> new();
$data -> set(file        => 'soil.dat',
             name        => 'dilute soil sample, DT corrected',
             energy      => '$1',
             numerator   => '$4*$8/$12',
             denominator => '$2',
             ln          => 0,
            );
[% END %]

[% FILTER html_para %]
In this example, column 4 contains the signal in the ROI for one of
the detector channels, column 8 contains the input count rate for the
channel, and column 12 contains the output count rate for that channel.

Note that there is no simple way to recover the signal in the ROI
channel once this pre-processing is done.  If you wish to compare
dead-time corrected data with the uncorrected data, you should create
two separete Data objects.  This is best accomplished using the
efficient technique explained in
[% INCLUDE html/link text="the section on multichannel data"
                     link="mc.html" %].
[% END %]


[% META title = 'The Autobk Algorithm and the Rbkg Parameter'
	about = 'Understanding the most important background removal parameter'
%]

[% FILTER html_para %]
The frequency cutoff between the background and the data discussed in
the previous section is determined by the
[% PROCESS font/param a="rbkg"%] parameter.  This is
the second parameter displayed in the background removal section of the
main window.

When data are imported into [% athena %], [% PROCESS font/param a="rbkg"%]
is set to its
[% INCLUDE html/link link="../params/defaults.html" text="default value" %], normally 1.

This example, like many of the examples in this Users'[%#'%] Guide,
can be found at 
[% INCLUDE html/link
link="http://bruceravel.github.com/XAS-Education/"
text="among the examples at my XAS-Education site" %].

Among these example files is one called [% PROCESS font/file
a="fe.060" %], which contains a spectrum from an iron foil measured at
60 K.  Import this by selecting Open file from the File menu or by
pressing [% INCLUDE modkey key="control" letter='o' %].  Navigate to
the location  of your example files and select
[% PROCESS font/file a="fe.060" %].  The
[% INCLUDE html/link link="../import/columns.html" text="column
selection dialog" %] then appears.  For now, just click OK.

The data is imported and [% PROCESS font/param a="rbkg"%] is set to
its default value of 1.  The data and the background function found
using the default parameter values can be found by pressing
[% PROCESS plotbutton class="red" letter='E' %].  This is shown
[% INCLUDE imageref text="here" label="rbkg_initial" in=1 %] on the left.
[% END %]

[% WRAPPER quadplot files=["rbkg_initial.png",
                           "rbkg_initial_k.png",
                           "rbkg_initial_r.png"]
%]
(Right)
The [% PROCESS font/file a="fe.060" %] data and its default background
function.  (Left) The [% PROCESS font/file a="fe.060" %] [% chik %]
data with its default background function.
(Bottom) The [% PROCESS font/file a="fe.060" %] [% chir %] data with
its default background function.
[% END %]

[% FILTER html_para %]
The background function is subtracted from the data and normalized,
resulting in a [% chik %] function.  Press
[% PROCESS plotbutton class="red" letter='k' %] to see [% chik %],
shown in the right panel
[% INCLUDE imageref text="above" label="rbkg_initial" in=1 %].

When you press [% PROCESS plotbutton class="red" letter='R' %],
the Fourier transform is plotted, as in the bottom panel
[% INCLUDE imageref text="above" label="rbkg_initial" in=1 %].

So [% PROCESS font/param a="rbkg"%] is the value below which the
AUTOBK algorithm removes Fourier components.  As you can see, below 1
the [% chir %] function is essentially 0, but above 1 the spectrum is
non-zero.

Now let's[%#'%] examine the effect of choosing
different values for [% PROCESS font/param a="rbkg"%].  First, make a
copy of the data so we can directly compare different values.  Do that
by selecting [% INCLUDE font/quote a="Copy current group" %] 
from the Group menu or by pressing
[% INCLUDE modkey key="Shift" key2="control" letter='y' %].  [% athena %]
now looks like [% INCLUDE imageref text="this" label="rbkg" %].
[% END %]

[% WRAPPER figure file="rbkg.png" %]
[% athena %] with the original [% PROCESS font/file a="fe.060" %] data
and a copy of that data.
[% END %]

[% FILTER html_para %]
Click on the group [% INCLUDE font/em a="Copy of fe.060" %]
to display its parameters in
the main window.  Change [% PROCESS font/param a="rbkg" %] to 0.2.
Now we want to directly compare these two ways of removing the
background.  The way of plotting multiple items in the groups list
involves the row of purple plotting buttons and the little check
buttons next to the items in the group list.  Click on the little
check buttons next to [% INCLUDE font/em a="fe.060" %]
and [% INCLUDE font/em a="Copy 1 of fe.060" %], as shown in the
screenshot above.  Now plot these two items by clicking
[% PROCESS plotbutton class="purple" letter='R' %].  It should look
something like
[% INCLUDE imageref text="this" label="rbkg_1_0_2" %].
[% END %]

[% WRAPPER quadplot files=["rbkg_1_0_2.png"
                           "rbkg_1_0_2k.png",
                           "rbkg_0_2e.png"]
%]
(Left) Comparing [% chir %] for the data and its copy with
[% PROCESS font/param a="rbkg"%] values  of 1 and 0.2.
(Right) Comparing [% chik %] for the data and its copy with
[% PROCESS font/param a="rbkg"%] values  of 1 and 0.2.
(Bottom) [% mu %] and the background for the copy with an
[% PROCESS font/param a="rbkg"%] value 0.2.
[% END %]

[% FILTER html_para %]
I suspect the blue spectrum is something like what you expect EXAFS
data to look like, while the red one seems somehow worse.  In fact, it
is easy to understand why the red one looks the way it does.  The
[% PROCESS font/param a="rbkg"%] parameter specifies the R value
below which the data is removed from the [% mu %] spectrum.  That is
exactly what has happened in the red spectrum -- below 0.2 the signal
is very small and the first big peak is, in fact, above 0.2.

Those two, plotted as [% chik %], are shown
[% INCLUDE imageref text="above" label="rbkg_1_0_2" in=1 %] on the right.

The blue spectrum oscillates around the zero axis, as one would
expect.  The red one has an obvious, long-wavelength oscillation.  It
is that oscillation that gives rise to the low-R peak in the [% chir %]
spectrum.

The background function, computed using 0.2 as the value of
[% PROCESS font/param a="rbkg"%] and plotted in energy, is shown
[% INCLUDE imageref text="above" label="rbkg_1_0_2" in=1 %] in the
bottom panel.

Using an [% PROCESS font/param a="rbkg"%] value of 0.2 yields a
background function that is not able to follow the actual shape of the
data.

What happens if the value of [% PROCESS font/param a="rbkg"%] is set
to a very large value?  The [% chir %] data for the values 1 and
2.5 are shown [% INCLUDE imageref text="here" label="rbkg_1_2_5" in=1 %].
[% END %]

[% WRAPPER quadplot files=["rbkg_1_2_5.png", "rbkg_2_5e.png"] %]
(Right) Comparing [% chir %] for the data and its copy with
[% PROCESS font/param a="rbkg"%] values  of 1 and 2.5.
(Left) [% mu %] and the background for the copy with an
[% PROCESS font/param a="rbkg"%] value 2.5.
[% END %]

[% FILTER html_para %]
Using a very large value of [% PROCESS font/param a="rbkg"%] results
in significant change to the first peak in [% chir %].  We can see why by
looking at the background function in energy
[% INCLUDE imageref text="" label="rbkg_1_2_5" in=1 %].
With such a large value of [% PROCESS font/param a="rbkg"%], the
background function has enough freedom to oscillate with frequencies
that resemble the data.  This results in a reduction of intensity
under the first peak.

The spline used to compute the background function has a limited
amount of freedom to oscillate.  The number of spline knots is
determined by the Nyquist criterion.  This number is proportional to
the extent of the data in k-space multiplied by
[% PROCESS font/param a="rbkg"%].  These knots are spaced evenly in
wavenumber.  Thus the spline function can only have frequency
components below [% PROCESS font/param a="rbkg"%].

So where does that leave us?  We want to make
[% PROCESS font/param a="rbkg"%] as big as possible so that the low-R
peaks are as well suppressed as possible.  On the other hand, too
large of a value will result in damage to the data.  The trick is to
find a balance.

A good rule of thumb is that [% PROCESS font/param a="rbkg"%] should
be about half the distance to the nearest neighbor.  But that is only
a rule of thumb.  Real data can be really difficult.  Noisy data, data
with strong white lines, data truncated by the appearance of another
edge -- all of these require careful consideration.  While
[% PROCESS font/param a="rbkg"%] is the primary background removal
parameter, several others should be investigated to yield a good
background removal.  Several of these are the subjects of the
following sections.
[% END %]

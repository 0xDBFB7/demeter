[% META title = 'Handling dopants in Feff' %]

[% PROCESS section label="Overview" %]

[% FILTER html_para %]
This section is adapted from the answer to  a [% INCLUDE html/link
link="http://cars9.uchicago.edu/ifeffit/FAQ/FeffitModeling#How_do_I_handle_doped_materials.3F_Why_doesn.27t_Atoms_handle_doped_materials.3F" text="Frequently Asked Question"%]
at the Ifeffit Wiki.

[%atoms%] is, except in extremely contrived situations, not capable of
writing a proper [%INCLUDE font/file a="feff.inp"%] file for a doped
material.  This is not a programming shortcoming of [%atoms%] (or its
author!), but a number theoretic limitation imposed by the physical
model used by [%feff%].

In the [%INCLUDE font/file a="feff.inp"%] file, there is a big list of
atomic coordinates. The reason that people like using [%atoms%] is
because, without [%atoms%], it is a pain in the ass to generate that
list. The virtue of [%atoms%] is that it automates that annoying task for
a certain class of matter, i.e. crystals.

[%feff%] expects a point in space to be either unoccupied or occupied by a
specific atom. A given point may be occupied neither by a fraction of
an atom nor by two different kinds of atoms.

Let's[%#'%] use a very simple example -- gold doped into FCC
copper. In FCC copper, there are 12 atoms in the first shell. If the
level of doping was, say, 25 percent , then [%atoms%] could reasonably
select 3 of the 12 nearest neighbors at random and replace them with
gold atoms. However, what should [%atoms%] do with the second shell,
which contains 6 atoms? 25 percent of 6 is 1.5. [%feff%] does not
allow a site to be half occupied by an atomic species, thus [%atoms%]
would have to decide either to over-dope or under-dope the second
shell.

This problem only gets worse if the doping fraction is not a rational
fraction, if the material is non-isotropic, or if the material has
multiple sites that the dopant might want to go to.

Because [%atoms%] cannot solve this problem correctly except in the
most contrived of situations, its author decided that [%atoms%] would
not attempt to solve it in any situation. If you specify dopants in
[%atoms%]'[%#'%] input data, the list in the [%INCLUDE font/file
a="feff.inp"%] file will be be made as if there are no dopants.

This leads to two big questions:
[% END %]

[% WRAPPER html/list type="ol" %]
[% WRAPPER html/li %]
Why would dopants be allowed in [%atoms%] in any capacity?
[% END %]
[% WRAPPER html/li %]
How does one deal with XAS of a doped sample? 
[% END %]
[% END %]

[% FILTER html_para %]
The first question is the easy one. At the programming level in
[%demeter%], [%atoms%] can do other things besides generating
[%INCLUDE font/file a="feff.inp"%] files.  Calculations involving
tables of absorption coefficients, simulations of powder diffraction,
and simulations of DAFS spectra could all effectively use of the
dopant information.  In [%artemis%] you will notice that there is not
even a column for specifying occupancy -- in [%artemis%] occupancy can
only be 1.

The second question is the tricky one and the answer is somewhat
different for EXAFS as for XANES.  The bottom line is that you need to
be creative and willing to run [%feff%] more than once.

The best approach to simulating a XANES spectrum on a doped material
that I am aware of also involves running [%feff%] many times.  One
problem a colleague of mine asked me about some time ago was the
situation of oxygen vacancies in Au2O3. After some discussion, the
solution we came up with was to use [%atoms%] to generate the
[%INCLUDE font/file a="feff.inp"%] for the pure material.  This fellow
then wrote a little computer program that would read in the [%INCLUDE
font/file a="feff.inp"%] file, randomly remove oxygen atoms from the
list, write the [%INCLUDE font/file a="feff.inp"%] file back out with
the missing oxygens, and run [%feff%]. He would do this repeatedly,
each time replacing a different set of randomly selected atoms and
each time saving the result.  This set of computed spectra was then
averaged.  New calculations were made and added to the running average
until the result stopped changing.  If I remember, it took about 10
calculations to converge.

This random substitution approach would work just as well for dopants
as for vacancies. 
[% END %]

[% PROCESS section label="Crystal data with partial occupancy" %]

[% FILTER html_para %]
A structure for the mineral zirconolite, [%zirconolite%], was
published as
[% INCLUDE citation
author = "H. J. Rossell"
journal = "Nature"
volume = "283"
pages = "282--283"
year = 1980
doi = "10.1038/283282a0"
%].  In that paper, significant site swapping was found between the
site occupied by Zr and one of the Ti sites.  Consequently, the CIF
file is published with partial occupancies for those tow sites. 
[%INCLUDE html/link
link="http://www.crystallography.net/9009220.html"
text="Here is the CIF file"%].

When this CIF file is imported into [%artemis%], you see this error
message:
[% END %]

[% WRAPPER figure file="feff_atoms_partical_occupancy.png" %]
[%atoms%] responds with an error message for crystal data with partial occupancy.
[% END %]

[% FILTER html_para %]
To use this crystal data in [%artemis%], you need to edit the CIF file
before importing it to remove the examples of partial occupancy.
Change the last loop from this:
[% END %]

[% WRAPPER html/pre %]
loop_
_atom_site_label
_atom_site_fract_x
_atom_site_fract_y
_atom_site_fract_z
_atom_site_occupancy
CaM1 0.37180 0.12450 0.49520 1.00000
ZrM2 0.12250 0.12220 -0.02580 0.93000
TiM2 0.12250 0.12220 -0.02580 0.07000
TiM3 0.24980 0.12230 0.74650 1.00000
TiM4 0.50000 0.05500 0.25000 0.86000
ZrM4 0.50000 0.05500 0.25000 0.14000
TiM5 0.00000 0.12700 0.25000 1.00000
O1 0.31000 0.13300 0.27500 1.00000
O2 0.47000 0.14600 0.10200 1.00000
O3 0.19700 0.08300 0.57300 1.00000
O4 0.40300 0.17400 0.71900 1.00000
O5 0.70200 0.16900 0.59000 1.00000
O6 -0.00100 0.11100 0.41400 1.00000
O7 0.11900 0.05500 0.78800 1.00000
[% END %]

[% FILTER html_para %]
to this:
[% END %]

[% WRAPPER html/pre %]
loop_
_atom_site_label
_atom_site_fract_x
_atom_site_fract_y
_atom_site_fract_z
_atom_site_occupancy
CaM1 0.37180 0.12450 0.49520 1.00000
ZrM2 0.12250 0.12220 -0.02580 1.00000
TiM3 0.24980 0.12230 0.74650 1.00000
TiM4 0.50000 0.05500 0.25000 1.00000
TiM5 0.00000 0.12700 0.25000 1.00000
O1 0.31000 0.13300 0.27500 1.00000
O2 0.47000 0.14600 0.10200 1.00000
O3 0.19700 0.08300 0.57300 1.00000
O4 0.40300 0.17400 0.71900 1.00000
O5 0.70200 0.16900 0.59000 1.00000
O6 -0.00100 0.11100 0.41400 1.00000
O7 0.11900 0.05500 0.78800 1.00000
[% END %]

[% FILTER html_para %]
To analyze your data while considering the partical occupancy, try one
of the techniques discussed in the following section.
[% END %]


[% PROCESS section label="Doped crystal and alloys" %]

[% FILTER html_para %] 
This section is adapted from text [% INCLUDE html/link
link="http://cars9.uchicago.edu/ifeffit/Doped" text="posted by Scott
Calvin"%] to the Ifeffit Wiki and retains his voice.

For samples which are doped crystals, there are a couple of methods
people have used. For purposes of this article, I'll[%#'%] consider
cases where the dopant is substitutional as opposed to interstitial
(maybe someone could edit this article to include that case?).

As an example of two methods, let's[%#'%] consider [%fes2%]
substitutionally doped with molybdenum. (I have no idea if such a
material is possible...I'm[%#'%] using it because [%fes2%] is included
as an example in the [%demeter%] distrribution.)
[% END %]

[% PROCESS paragraph label="Method 1" %]


[% FILTER html_para %] 
Run atoms for [%fes2%].

Now look at the [%INCLUDE font/file a="feff.inp"%] file that is
generated.  Under [%INCLUDE font/quote a="Potentials"%], it says the
following:
[% END %]

[% WRAPPER html/pre %]
 POTENTIALS
 *    ipot   Z  element
        0   26   Fe        
        1   26   Fe        
        2   16   S  
[% END %]

[% FILTER html_para %] 
Add another line for the Mo, which is atomic number 42 (the atomic
number is [%INCLUDE font/b a="required"%]): 
[% END %]

[% WRAPPER html/pre %]
 POTENTIALS
 *    ipot   Z  element
        0   26   Fe        
        1   26   Fe        
        2   16   S     
        3   42   Mo
[% END %]


[% FILTER html_para %] 
[%INCLUDE font/b a="Important"%]: Do not skip numbers in the [%INCLUDE
font/quote a="ipot"%] column, and make sure [%INCLUDE font/quote
a="0"%] is the absorber!

Next, take the list following the word [%INCLUDE font/quote
a="ATOMS"%] in the [%INCLUDE font/file a="feff.inp"%] file,
and arbitrarily change roughly the right number of iron atoms to moly
atoms. Make sure to change the [%INCLUDE font/quote
a="ipot"%] column to match...it's[%#'%] the part
feff will actually use:
[% END %]



[% WRAPPER html/pre %]
 ATOMS                          * this list contains 71 atoms
 *   x          y          z      ipot  tag              distance
    0.00000    0.00000    0.00000  0    Fe1              0.00000
    2.07514    0.62686    0.62686  2    S1_1             2.25657
    0.62686   -2.07514    0.62686  2    S1_1             2.25657
   -0.62686    0.62686    2.07514  2    S1_1             2.25657
   -0.62686    2.07514   -0.62686  2    S1_1             2.25657
   -2.07514   -0.62686   -0.62686  2    S1_1             2.25657
    0.62686   -0.62686   -2.07514  2    S1_1             2.25657
   -3.32886    0.62686    0.62686  2    S1_2             3.44488
    0.62686    3.32886    0.62686  2    S1_2             3.44488
    0.62686   -0.62686    3.32886  2    S1_2             3.44488
    3.32886   -0.62686   -0.62686  2    S1_2             3.44488
   -0.62686   -3.32886   -0.62686  2    S1_2             3.44488
   -0.62686    0.62686   -3.32886  2    S1_2             3.44488
   -2.07514   -2.07514    2.07514  2    S1_3             3.59425
    2.07514    2.07514   -2.07514  2    S1_3             3.59425
    2.70200    2.70200    0.00000  1    Fe1_1            3.82121
   -2.70200    2.70200    0.00000  3    Mo1_1            3.82121
    2.70200   -2.70200    0.00000  1    Fe1_1            3.82121
   -2.70200   -2.70200    0.00000  1    Fe1_1            3.82121
    2.70200    0.00000    2.70200  1    Fe1_1            3.82121
   -2.70200    0.00000    2.70200  3    Mo1_1            3.82121
    0.00000    2.70200    2.70200  1    Fe1_1            3.82121
    0.00000   -2.70200    2.70200  1    Fe1_1            3.82121
    2.70200    0.00000   -2.70200  1    Fe1_1            3.82121
   -2.70200    0.00000   -2.70200  3    Mo1_1            3.82121
    0.00000    2.70200   -2.70200  1    Fe1_1            3.82121
    0.00000   -2.70200   -2.70200  1    Fe1_1            3.82121
   -2.07514    3.32886    2.07514  2    S1_4             4.43776
[% END %]


[% FILTER html_para %] 
In this case, I changed 3 of the 12 nearest iron neighbors into
moly...reasonable if I have about 25 percent doping. 

If you are doing a [%feff%] calculation for the moly [%INCLUDE font/em
a="edge"%], then also change the very first iron to moly, and change
potential 0 in the ipot list to moly with ipot 0.  
[% END %]

[% WRAPPER html/pre %]
 POTENTIALS
 *    ipot   Z  element
        0   42   Mo        
        1   26   Fe        
        2   16   S
        3   43   Mo        

 ATOMS                          * this list contains 71 atoms
 *   x          y          z      ipot  tag              distance
    0.00000    0.00000    0.00000  0    Mo1              0.00000
    2.07514    0.62686    0.62686  2    S1_1             2.25657
    0.62686   -2.07514    0.62686  2    S1_1             2.25657
   -0.62686    0.62686    2.07514  2    S1_1             2.25657
   -0.62686    2.07514   -0.62686  2    S1_1             2.25657
[% END %]

[% FILTER html_para %] 
If you are doing the calculation for the iron edge, leave the first
iron alone, since it is still the absorber. 

Now run [%feff%], and you'll[%#'%] get the iron scattering paths
listed separately from the moly scattering paths.

One more step ... correcting for the actual doping fraction. Suppose
there is actual 20 percent moly and not 25 percent, as we implied. We
couldn't[%#'%] have handled that just through feff, because we
can't[%#'%] change exactly 20 percent of 12 atoms...we have to change
2, which is 17 percent, or 3, which is 25 percent.

The fix for this is to change the [%s02%] in the moly and sulfur
scattering paths to account for this. You could, for example, use the
following GDS parameters:  
[% END %]


[% WRAPPER html/pre %]
set: MolyPercent = 0.20
def: IronPercent = 1-MolyPercent
[% END %]

[% FILTER html_para %] 
Then go to the individual path representing the scattering off of
nearest neighbor moly, and assign it an [%s02%] of  
[% END %]

[% WRAPPER html/pre %]
amp*MolyPercent/(3/12)
[% END %]

[% FILTER html_para %] 
That way, if the MolyPercent is 20 percent, it will reduce the
amplitude of those paths by 20/25 percent, as is proper.

Of course, the iron scatterer would get an [%s02%] of 
[% END %]

[% WRAPPER html/pre %]
amp*IronPercent/(9/12)
[% END %]

[% FILTER html_para %] 
That's[%#'%] more or less it!

You could, of course, guess the [%INCLUDE font/mono
a="MolyPercent"%] instead of setting it, if
for some reason it was unknown in your sample.  
[% END %]


[% PROCESS paragraph label="Method 2" %]


[% FILTER html_para %] 
Suppose we want to analyze the iron edge.

Run atoms for [%fes2%] and then run [%feff%].

Then make a new [%atoms%] page, type or read in the [%fes2%] file, and
just change the Fe to Mo. Run [%atoms%] again.

If you're[%#'%] doing the iron edge, then change the absorber to iron
in the [%INCLUDE font/file a="feff.inp"%] file (this requires changing
the potential list; see the description under "Method 1" for how to do
this.) Run [%feff%].

(If you want to analyze the moly edge, then of course you change the
[%INCLUDE font/file a="feff.inp"%] file in the first calculation to
moly and leave it as moly in the second.)

You now have [%INCLUDE font/b a="two"%] sets of [%feff%] files
associated with one data set.

Make GDS parameters:
[% END %]

[% WRAPPER html/pre %]
set: MolyPercent = 0.20
def: IronPercent = 1-MolyPercent
[% END %]

[% FILTER html_para %] 
Now make the [%s02%] for all paths calculated with the original [%atoms%] file:
[% END %]

[% WRAPPER html/pre %]
amp*IronPercent
[% END %]

[% FILTER html_para %] 
and for all paths calculatged with the new [%atoms%] file:
[% END %]

[% WRAPPER html/pre %]
amp*MolyPercent
[% END %]

[% FILTER html_para %] 
Again, you can guess the [%INCLUDE font/mono
a="MolyPercent"%] if it's[%#'%] unknown. 
[% END %]

[% PROCESS paragraph label="Discussion of these two methods" %]

[% FILTER html_para %] 
Which method you use is largely a matter of taste. The first method is
easier to screw up, since there's[%#'%] a lot of counting involved. On the
other hand, it generates many fewer paths, and thus makes for smaller
files and may fit faster (you're[%#'%] not wasting time and effort counting
sulfur paths twice, for example). The first method also gives you the
potential of finding a few multiple scattering paths that involve both
iron and moly (in this example) that you can't[%#'%] probe at all by the
second method. This is most likely to be true when the dopant is in
low concentrations but is high-Z...it's[%#'%] possible that there may be a
moly-iron multiple-scattering path that is significant, and it's[%#'%] not
going to be modeled so well by the weighted average of iron-iron and
moly-moly paths used in method 2. But the price for this is that
properly incorporating multiple-scattering paths via method 1 requires
an annoying amount of counting and thinking. 
[%END%]
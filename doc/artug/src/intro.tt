[% META title = 'Introduction'
        about = ''
	chapter = 1
	nosubpages = 1
%]


[% FILTER html_para %]
[% feff %] and [% ifeffit %] are amazing tools, but they can be
somewhat hard to use.  [%feff%] requires the use of clunky text files
with confusing syntax
as its input.  [%ifeffit%] has a wordy, finicky syntax.  Both benefit
by being wrapped up inside of something easier to use.  Hopefully,
[%artemis%] is that something. 
[% END %]

[% PROCESS section label="Using this document" %]

[% IF document_style == 'html' %]
[% FILTER html_para %]
The side bar shows the top-level table of contents of the document
along with the contents of the current chapter.  The top bar provides
additional navigation linking directly to chapters immediately before
or after the current chapter or up and down within the current chapter.

Copyright and licensing information is found at the bottom of every
page.

This is document version [% document_version %] for [% demeter %]
version [% demeter_version %].
[% END %]
[% END %]

[% PROCESS subsection label="Typesetting" %]
[% FILTER html_para %]
I use some typesetting conventions to convey certain kinds of
information in this manual.
[% END %]

[% WRAPPER html/list type="ol" %]
[% WRAPPER html/li %]
The names of programs look like this: [%artemis%], [%feff%]
[% END %]
[% WRAPPER html/li %]
The names of files look like this: [% INCLUDE font/file a="atoms.inp" %]
[% END %]
[% WRAPPER html/li %]
Configuration parameters (i.e. preferences) for [%artemis%] and
[%demeter%] look like this:
[% INCLUDE preference group="artemis" option="plot_after_fit" %]
[% END %]
[% WRAPPER html/li %]
Verbatim text, such as represent specific input to or output from
[%artemis%] or text typed into a computer, looks like
this:
[% WRAPPER html/pre %]
This is verbatim text!
[% END %]
[% END %]
[% END %]

[% WRAPPER html/caution %]
Words of caution intended to point out some specific pitfall of the
use or [%artemis%] are found in boxes that look like this.
[% END %]

[% WRAPPER html/todo %]
Aspects of this document, or possibly of [%artemis%] itself, which
are incomplete are indicated with boxes like this.
[% END %]





[% PROCESS section label="The technology behind Artemis" %]

[% PROCESS subsection label="perl" %]

[% FILTER html_para %]
[% demeter %] uses [% INCLUDE html/link
link="http://perl.org" text="perl" %].  This is, I suppose, an unsexy
choice these days.  All the cool kids are, after all, using python or
ruby.  I like perl.  I can think in perl.  And I can code quickly and
fluently in perl.  What's [%#'%] more, perl has [% INCLUDE html/link
link="http://www.cpan.org/" text="CPAN" %], the worlds largest
repository of language extensions.  CPAN means that I have far fewer
wheels to recreate (and probably get wrong).  Virtually any language
extension I need in pursuit of making [% demeter %] awesome probably
already exists.
[% END %]

[% PROCESS subsection label="wxWidgets and wxPerl" %]
[%artemis%] uses 
[% INCLUDE html/link link="http://wxwidgets.org/" text="wxWidgets" %]
and its perl wrapper 
[% INCLUDE html/link link="http://wxperl.sourceforge.net/" text="wxPerl" %]
as its graphical toolkit.  This cross-platform tool
gives [%artemis%] a truly native look and feel because
it uses the platform's [%#'%] native API rather than emulating the
GUI.  Using wx's[%#'%] rich set of graphical tools, [%artemis%]
strives to provide a powerful yet user-friendly environment in which
to perform EXAFS data analysis.

[% PROCESS subsection label="Moose" %]

[% FILTER html_para %]
[% demeter %] uses [% INCLUDE html/link
link="http://search.cpan.org/~flora/Moose/lib/Moose/Manual.pod" text="Moose" %].  This is,
on the balance, a very good thing, indeed.  Moose brings many powerful
capabilities to the programming table.  When I was about halfway
through writing [% demeter %], I paused for a bit less than a month to
rewrite everything I had thus far created to use Moose.  This left me
with about 2/3 as many lines of code and a code base that was more
robust and more featureful.  Neat-o!

For the nerdly, Moose is an implementation of a [% INCLUDE html/link
text="meta-object protocol"
link="http://en.wikipedia.com/wiki/Metaobject" %].  This interesting
and powerful tool allows for the semantics of the object system to be
modified at either compile or run time.  The problem of adding
features and functionality to the object system is therefore pushed
downstream from the developers of the language to the users of the
language.  In good CPAN fashion, a healthy and robust ecosystem has
evolved around Moose producing a whole host of useful extensions.

Moose offers lots of great features, including an extremely powerful
attribute system, a type attribute system, method modifiers, an
ability to mix object and aspect orientation, and a wonderfully deep
set of automated tests.  I am confident that simply by using Moose, my
code is better code and, because Moose testing is so deep, I am
confident that any bugs in [% demeter %] are my fault and not the
fault of the people whose work I depend on.

For all the wonderfulness of Moose, it does have one big wart that I
need to be up-front about.  Moose is slow at start-up.  Since 
[% demeter %] is big and Moose starts slowly, any program using 
[% demeter %] will take about 2 extra second to start.  For a
long-running program like a complicated fitting script or a GUI, an
additional couple of seconds at start-up is no big deal.  For
quick-n-dirty or one-off application, that may a bit annoying.  The
Moose folk claim to be working on start-up issues.  I am keeping my
fingers crossed.  Until then, I live with the slow start-up, confident
that the rest of [% demeter %] is worth the wait.
[% END %]

[% PROCESS subsection label="Templates, backends, and other tools" %]

[% FILTER html_para %]
All of [%artemis%]'[%#'%] interactions with [%feff%], [%ifeffit%], and
its plotting tools use [% INCLUDE html/link
link="https://metacpan.org/module/Text::Template" text="a templating
library"%].  Along with a clean separation between function within the
[%demeter%] code base and syntax of the various tools used by
[%demeter%], the use of templated interactions provides a clear
upgrade path for all parts of [%artemis%].  
[% END %]

[% WRAPPER html/list type="dl" %]
[% WRAPPER html/dt dt="Feff" %]
Although [%demeter%] ships with a freely redistributable version of
[%feff6%], it is possible to upgrade to use later versions of [%feff%]
by providing an appropriate set of templates.  At this time, [%feff8%]
is partially supported, with better support coming soon.
[% END %]
[% WRAPPER html/dt dt="Ifeffit and Larch" %]
Matt Newville, the author of [%ifeffit%], is hard at work on
[%ifeffit%]'s[%#'%] successor, called [%larch%].  The path to supporting
[%larch%] will be relatively shallow, requiring only authorship of a
new set of templates.
[% END %]
[% WRAPPER html/dt dt="plotting" %]
[%demeter%] currently supports two plotting backends: PGPLOT, which is
the native plotting tool in [%ifeffit%], and [%gnuplot%].  New
plotting backends can be supported, again simply by creation of new
set of templates.
[% END %]
[% END %]

[% FILTER html_para %]
For numerically intensive parts of the code, [%artemis%] relies on
[% INCLUDE html/link link="http://pdl.perl.org/" text="the Perl Data Language"%],
a natively vector-oriented numerical language.

[%artemis%] makes use a host of other tools from CPAN, the online perl
library, including tools for date and time manipulation; heap and tree
data structures; tools for formal graph theory; tools for manipulating
zip, INI, and yaml files; and many others.  These tools from CPAN are
extensively tested and highly reliable.
[% END %]

[% PROCESS section label="Folders and log files" %]

[% FILTER html_para %]
On occasion, it is helpful to know something about how [%artemis%]
writes information to disk during its operations.
[% END %]

[% WRAPPER html/list type="dl" %]
[% WRAPPER html/dt dt="working folder" %]
Many of [%artemis%]'[%#'%] chores involve writing temporary files.
Project files are unpacked in temporary folders.  [%gnuplot%] writes temporary
files as part of its plot creation.  These files are stored in the 
[% INCLUDE font/quote a="stash folder" %].  On linux (and other
unixes) this is [% INCLUDE font/file a="$HOME/.horae/stash/" %].  On
Windows this is [% INCLUDE font/file a="%APPDATA%\\demeter\\stash"%].
[% END %] 
[% WRAPPER html/dt dt="log files" %]
When [%artemis%] runs into problems, it attempts to write enough
information to the screen that the problem can be addressed.  This
screen information is what Bruce needs to troubleshoot bugs.  On a
linux (or other unix) machine, simply run [%artemis%] from the command
line and the informative screen messages will be written to the
screen.

On a Windows machine, it is uncommon to run the software from the
command line, so [%artemis%] has been instrumented to write a run-time
log file.  This log file is called 
[% INCLUDE font/file a="dartemis.log"%] and can be found in the 
[% INCLUDE font/file a="%APPDATA%\\demeter"%] folder.  
[% END %] 
[% END %]

[% FILTER html_para %]
[% INCLUDE font/file a="%APPDATA%"%]
is [% INCLUDE font/file a="C:\\Users\\<username>\\AppData\Roaming\\" %]
on Windows 7.

It is [% INCLUDE font/file a="C:\\Documents and Settings\\<username>\\Application Data\\" %]
on Windows XP and Vista.  

In either case, 
[% INCLUDE font/file a="username" %]
is your log-in name.
[% END %]

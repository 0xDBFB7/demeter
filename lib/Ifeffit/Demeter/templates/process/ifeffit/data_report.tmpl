{ # -*- ifm -*-
  # data parameter report
  #   {$D->group} returns the ifeffit group name
  #   {$D->parameter} returns the value of that parameter
}
{
  ## write out limited precision for some parameters
  $spl1e = sprintf("%.3f", $D->bkg_spl1e);
  $spl2e = sprintf("%.3f", $D->bkg_spl2e);
  $spl1  = sprintf("%.3f", $D->bkg_spl1);
  $spl2  = sprintf("%.3f", $D->bkg_spl2);
  $nc0   = sprintf("%.6f", $D->bkg_nc0);
  $nc1   = sprintf("%.6g", $D->bkg_nc1);
  $nc2   = sprintf("%.6g", $D->bkg_nc2);
  $int   = sprintf("%.6f", $D->bkg_int);
  $slope = sprintf("%.6g", $D->bkg_slope);
  q{}
}
.  Element={$D->bkg_z}   Edge={$D->fft_edge}
Background parameters
.  E0={$D->bkg_e0}  Eshift={$D->bkg_eshift}  Rbkg={$D->bkg_rbkg}
.  Standard=None
.  k-weight={$D->bkg_kw}  Edge step={$D->bkg_step}
.  Fixed step={$D->yesno(bkg_fixstep)}    Flatten={$D->yesno(bkg_flatten)}
.  Pre-edge range: [ {$D->bkg_pre1} : {$D->bkg_pre2} ]
.  Pre-edge line: {$int} + {$slope} * energy
.  Normalization range: [ {$D->bkg_nor1} : {$D->bkg_nor2} ]
.  Post-edge polynomial: {$nc0} + {$nc1} * en + {$nc2} * en^2
.  Spline range (energy): [ {$spl1e} : {$spl2e} ]   Clamps: {$D->clamp($D->bkg_clamp1)}/{$D->clamp($D->bkg_clamp2)}
.  Spline range (k): [ {$spl1} : {$spl2} ]
Foreward FT parameters
.  Kweight={$P->kweight}   Window={$D->fft_kwindow}   Phase correction={$D->fft_pc}
.  k-range: [ {$D->fft_kmin} : {$D->fft_kmax} ]   dk={$D->fft_dk}
Backward FT parameters
.  R-range: [ {$D->bft_rmin} : {$D->bft_rmax} ]
.  dR={$D->bft_dr}   Window={$D->bft_rwindow}
Plotting parameters
.  Multiplier={$D->plot_multiplier}   Y-offset={$D->y_offset}

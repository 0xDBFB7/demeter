[% META title = 'Histogram' 
   	about = 'Fitting using an arbitrary distribution of atoms'
%]

[% FILTER html_para %]
In a simple fitting model, such as the fit to 
[% INCLUDE html/link text="copper metal" link="../fit/index.html" %],
we assume that the neighboring atoms are Gaussian distributed and that
all disorder about the near-neighbor scattering distance can be
described by the application of the [% sigsqr %] term in the EXAFS
equation.  Often, this is quite enough.  For well-ordered materials,
it is probably even true.  For small levels of structural disorder,
the additional disorder thus introduced can often be approximated by
having a larger [% sigsqr %] value or by introducing a small number of
additional scattering paths at slightly different distances.

Some systems, however, are not well described by a Gaussian
distribution.  When the structural disorder is sufficeintly large, a
simple Gaussian is inadequate to describe the distribution.  In the
EXAFS literature, higher cumulants are often used in this situation.
But even this approach is limited in that, in practice, one can only
measure small third and fourth cumulants (i.e. a skew and a kurtosis
of the distribution) with any precision.

In this example, I explain one method for incorporating the results of
a molecular dynamics simulation into an EXAFS analysis.  The system is
a very small metallic gold nanoparticle.  The very large ratio of
surface area to volume introduces substantial distortions to the local
structure of the particle.  These local structural distortions are
seen in the MD simulations.  From these MD simulations, we have  files
containing the local structure in the form of a histogram.  These
files contain some measure of the probability of finding a
neighboring atom on a grid of radial distances.  It looks something
like this:
[% END %]

[% WRAPPER html/pre -%]
  0.000  0.000000E+00
  .
    .
      .
  2.636  2.818836E-01
  2.642  3.801608E+00
  2.649  1.245984E+01
  2.656  1.017059E+00
  2.662  1.660477E-01
  2.668  6.903760E-02
  2.675  5.119136E-02
  2.681  6.556027E-02
  2.688  1.158219E-01
  .
    .
      . and so on out to about 6.5 A
[% END %]

[% WRAPPER scriptcaption this="histogram.png" %]
Here is a plot of one calculated pair distribution function for these
metallic gold nanoparticles.  The main plot shows the distribution of
atoms in the first two coordination shells.  The bin populations have
been normalized such that the first coordination shell contains 12
atoms.  The inset shows a blow-up of the first coordination shell
along with a Gaussian fitted to that distribution.
[% END %]


[% FILTER html_para %]
From the inset to this figure, we see that a Gaussian is not a very
good representation of this distribution.  It does an ok job of
representing the bulk of the coordination shell, but it completely
fails to represent the smaller population of shorter Au-Au distances
which, presumably, result from truncation effects at the relatively
large surface.

The approach the [% demeter %] offers is to compute an
[% INCLUDE html/link text="SSPath" link="../pathlike/sspath.html" %]
at each bin of the histogram.  The [% S02 %] at each bin is set to the
population of that bin.  Each bin should get the same [% e0 %]
parameter. If the histogram accurately represents all
soruces of disorder -- both structural and thermal, something that is
certainly possible in an MD simulation -- then no [% sigsqr %] or 
[% delr %] parameters would be needed.  Of course, they could be
introduced to account for any shortcomings of the MD simulation
compared to the measured data.
[% END %]

[% WRAPPER codeexample -%]
#!/usr/bin/perl
use Demeter qw(:plotwith=gnuplot :ui=screen);

## -------- Import the results of a Feff calculation on bulk Au
my $feff = Demeter::Feff->new(yaml=>'Au_feff.yaml');
$feff->set(workspace=>"./", screen=>0,);
my @list_of_paths = @{ $feff->pathlist };

## -------- Import some data
my $data  = Demeter::Data::Prj->new(file=>'Aunano.prj') -> record(5);
$data -> set(fft_kmin => 3,      fft_kmax => 13,
             bft_rmin => 1.992,  bft_rmax => 3.399,
             fit_k1   => 1,      fit_k2   => 1,     fit_k3=>1, );

## -------- Import the first scattering path object and use it
##          to populate a histogram defined by an external file.
##          Also define a VPath containing the entire first
##          shell of the histogram.
my $firstshell = $list_of_paths[1];

my ($rx, $ry) = $firstshell->histogram_from_file('histogram_file', 1, 2, 2.5, 3.1);
my $common = [data=>$data, sigma2 => 'sigsqr', e0 => 'enot', delr => 'alpha*reff'];

my $paths = $firstshell -> make_histogram($rx, $ry, 'amp', q{}, $common);
my $vpath = Demeter::VPath->new(name=>'histo');
$vpath->include(@$paths);

## -------- Some parameters
my @gds = (
           Demeter::GDS->new(gds=>'guess', name=>'amp',    mathexp=>6),
           Demeter::GDS->new(gds=>'guess', name=>'enot',   mathexp=>0),
           Demeter::GDS->new(gds=>'set',   name=>'alpha',  mathexp=>0),
           Demeter::GDS->new(gds=>'set',   name=>'sigsqr', mathexp=>0.0),
          );
$data->po->kweight(2);

## -------- Do the fit
my $fit = Demeter::Fit->new(gds=>\@gds, data=>[$data], paths=>$paths);
$fit->fit;
$fit->interview;
[% END %]

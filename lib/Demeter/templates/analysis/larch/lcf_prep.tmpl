{
  # here $S is the LCF group
  # and $D is the data group to be fit
  q{}
}
##| prepare groups for LCF fitting
{$S->group} = group(x = {$D->group}.energy + {$D->bkg_eshift}, func = {$D->group}.{$S->suffix}, __name__='{$S->group}')
if hasattr({$D->group}, 'stddev'):
    {$S->group}.epsilon = {$D->group}.stddev
else:
    {$S->group}.epsilon = ones(len({$D->group}.energy))
endif

## add noise to the data?
if {$S->TrueFalse($S->noise)}: {$S->group}.func = {$S->group}.func + random.normal(size=len({$S->group}.x), scale={$S->noise})

## add a linear term after e0?
demlcf   = group({$S->group}   = param(0, vary={$S->TrueFalse($S->one_e0)}),
                 _slope  = param(0, vary={$S->TrueFalse($S->linear)}),
                 _offset = param(0, vary={$S->TrueFalse($S->linear)}),
                 __name__='demlcf')
demlcfsh = group(__name__='demlcfsh')
demlcfconst = group(__name__='demlcfconst')
demlcfconst.i0 = index_of({$S->group}.x, {$S->data->bkg_e0})
demlcfconst.i1 = index_of({$S->group}.x, {$S->xmin})
demlcfconst.i2 = index_of({$S->group}.x, {$S->xmax})

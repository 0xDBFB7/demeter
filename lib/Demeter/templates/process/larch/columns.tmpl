{ # -*- ifm -*-
  # template for converting columns to xmu
  #   {$D->group} returns the ifeffit group name
  #   {$D->parameter} returns the value of that parameter
  if ($D->i0_string eq '1') {
     $str = '_n = size(' . $D->energy_string . ")\n";
     $D->i0_string($D->group . '.ones');
     $str .= $D->group . '.ones = ones(_n)';
     $str;
  };
}
##| making mu(E) from columns for group {$D->group}
{$D->group}.energy = {$D->energy_string}
{$D->group}.xmu    = {$D->xmu_string}
{$D->group}.i0     = {$D->i0_string}
{$D->group}.signal = {$D->signal_string}
__xmu_max      = abs(max({$D->group}.xmu))
__i0_max       = max({$D->group}.i0)
__signal_max   = max({$D->group}.signal)
__i0_scale     = __xmu_max / __i0_max
__signal_scale = __xmu_max / __signal_max
del __xmu_max
del __i0_max
del __signal_max

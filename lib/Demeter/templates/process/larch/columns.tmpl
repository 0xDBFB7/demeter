{ # -*- ifm -*-
  # template for converting columns to xmu
  #   {$D->group} returns the ifeffit group name
  #   {$D->parameter} returns the value of that parameter
}
##| making mu(E) from columns for group {$D->group}
{$D->group}.energy = {$D->energy_string}
{$D->group}.xmu    = {$D->xmu_string}
__xmu_max      = abs(max({$D->group}.xmu))

if '{$D->i0_string}' == '1': 
   {$D->group}.i0 = ones(size({$D->group}.energy));
    __i0_scale     = __xmu_max
else:
   {$D->group}.i0 = {$D->i0_string}
    __i0_scale     = __xmu_max / max({$D->group}.i0)
#endif

{$D->group}.signal = {$D->signal_string}
__signal_scale = __xmu_max / max({$D->group}.signal)

del(__xmu_max)

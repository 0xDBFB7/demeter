{ # -*- ifm -*-
  # post-spline template
  #   {$D->group} returns the ifeffit group name
  #   {$D->parameter} returns the value of that parameter
  # this is a relatively complicated template as it requires some perl-level
  # flow control
  # see the Text::Template document for an explanation of $OUT
}
##| post autobk
set({$D->group}.preline  = {$D->bkg_int} + {$D->bkg_slope}*({$D->group}.energy + {$D->bkg_eshift}),
    {$D->group}.nbkg     = ({$D->group}.bkg - {$D->group}.preline) / {$D->bkg_step} + {$D->y_offset},
{if ($D->datatype eq 'xanes') {
      $OUT .= sprintf("    %s.prex     = (%s.xmu-%s.preline),\n",    $D->group, $D->group, $D->group);
      $OUT .= sprintf("    %s.norm     = (%s.xmu-%s.preline)/%g,\n", $D->group, $D->group, $D->group, $D->bkg_step);
      $OUT .= sprintf("    %s.postline = %g+%g*(%s.energy+%f)+%g*(%s.energy+%f)**2)\n",
                                                                    $D->group, $D->get(qw(bkg_nc0 bkg_nc1)),
                                                                    $D->group, $D->get(qw(bkg_eshift bkg_nc2)),
                                                                    $D->group, $D->get(qw(bkg_eshift)));
 } elsif ($D->datatype eq 'xmudat') {
      $OUT .= sprintf("    %s.prex     = %s.xmu,\n",  $D->group, $D->group);
      $OUT .= sprintf("    %s.norm     = %s.xmu )\n", $D->group, $D->group);
 } elsif ($D->is_nor) {
      $OUT .= sprintf("    %s.prex     = %s.xmu,\n",  $D->group, $D->group);
      $OUT .= sprintf("    %s.norm     = %s.xmu )\n", $D->group, $D->group);
 } else {
      $OUT .= sprintf("    %s.prex     = %s.pre )\n", $D->group, $D->group);
 }
}
